import React, { forwardRef } from "react";
import styled from "styled-components";
import { Cost } from "./StreetTile";
import { getRowByID, isVertical } from "../../utils";
import { socket } from "../../socket";

const mallTypes = new Map([[
  "planeta", <svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" viewBox="0 0 50 50" fill="none">
    <path
      d="M48.8335 17.2634L0.773078 18.9258C0.257685 20.9079 0 22.954 0 25C0 25.7673 -1.57295e-05 26.4706 0.0644084 27.2379L49.3489 30.6905C49.7998 28.8363 49.9931 26.9182 49.9931 25C50.0575 22.3785 49.671 19.757 48.8335 17.2634Z"
      fill="#202020" />
    <path
      d="M47.996 15.0895C46.5787 11.8287 44.4527 8.88748 41.8113 6.52175L3.47898 12.2123C2.64146 13.6189 1.93279 15.1535 1.35297 16.688L47.996 15.0895Z"
      fill="#202020" />
    <path
      d="M45.3545 39.6419L9.92125 44.9489C14.2377 48.2097 19.5849 50 25.0609 50C33.1139 50 40.6516 46.1637 45.3545 39.6419Z"
      fill="#202020" />
    <path
      d="M39.5565 4.60358C35.3045 1.59847 30.2794 0 25.0611 0C17.2657 0 9.9858 3.6445 5.21842 9.71867L39.5565 4.60358Z"
      fill="#202020" />
    <path
      d="M0.450937 29.4757C1.35287 34.6547 3.92985 39.4501 7.73087 43.0946L46.9007 37.2762C47.6738 35.8696 48.3181 34.399 48.8335 32.9284L0.450937 29.4757Z"
      fill="#202020" />
  </svg>],
  ["auchan", <svg xmlns="http://www.w3.org/2000/svg" width="48" height="46" viewBox="0 0 48 46" fill="none">
    <path
      d="M28.3615 6.82814C27.9564 7.23432 27.9564 7.84359 28.3615 8.14822C28.7665 8.55441 29.3741 8.5544 29.6779 8.14822C30.083 7.74204 30.083 7.13277 29.6779 6.82814C29.2729 6.42196 28.6653 6.42196 28.3615 6.82814Z"
      fill="#FEFEFE" />
    <path
      d="M46.5821 11.5763L42.5315 11.5763L41.5188 12.7948C41.3163 12.9979 41.4176 13.0994 41.6201 13.201L42.9366 13.8102L46.6834 12.084C46.9872 11.9824 46.8859 11.5763 46.5821 11.5763ZM31.4935 31.4791L26.5315 31.4791C25.215 32.2914 24.81 32.4945 23.0884 33.2053C22.9872 33.2053 22.8859 33.4084 22.9872 33.51L27.4429 46H29.9745L25.9239 34.5254C28.5568 34.5254 34.9366 33.8146 38.3796 28.2296C37.2657 29.8543 34.734 31.4791 31.4935 31.4791ZM38.5821 13.5056C38.1771 13.9118 37.5695 13.9118 37.2657 13.5056C36.8606 13.0994 36.8606 12.4902 37.2657 12.1855C37.6707 11.7793 38.2783 11.7793 38.5821 12.1855C37.8406 11.3358 36.4555 11.3732 35.7467 12.1855C34.9344 13 34.9366 14.2164 35.7467 15.0288C36.5568 15.8411 37.772 15.8411 38.5821 15.0288C39.3922 14.2164 39.3922 12.9979 38.5821 12.1855C38.8859 12.5917 38.8859 13.0994 38.5821 13.5056ZM28.7593 36.2517L32.2024 46H34.734L31.0884 35.744C30.4809 35.947 29.6707 36.0486 28.7593 36.2517ZM32.2024 24.0663C32.5062 23.6601 32.7087 23.2539 33.0125 22.7462C32.9112 22.6447 32.81 22.7462 32.7087 22.8477C27.5441 28.3312 22.5821 29.042 18.734 29.042H12.8606C12.6581 29.042 12.5568 28.8389 12.6581 28.6358C17.215 22.34 22.1771 17.3643 25.9239 14.2164L16.1011 22.4416C15.291 23.0508 14.3796 23.457 13.1644 23.457L0.809967 23.457C0.506169 23.457 0.607435 23.7616 0.607435 23.9647C1.41756 26.6049 3.84794 29.042 7.89857 29.042L4.96186 31.9868C4.8606 32.0883 4.8606 32.393 5.1644 32.393H16.2024C24.1011 32.393 29.0631 28.9404 32.2024 24.0663Z"
      fill="#202020" />
    <path
      d="M35.7467 15.0288C34.9366 14.2164 34.9366 12.9979 35.7467 12.1855C36.4874 11.3367 37.8733 11.3732 38.5821 12.1855C39.3922 12.9979 39.3922 14.2164 38.5821 15.0288C37.772 15.8411 36.5568 15.8411 35.7467 15.0288ZM38.2785 28.2295C41.7215 22.6445 42.9366 13.8102 42.9366 13.8102L41.6201 13.201C41.4176 13.0994 41.3142 13 41.5188 12.7948L42.5315 11.5763C41.9239 10.3577 39.6962 8.32669 36.4557 8.32669C34.5317 8.32669 32.8101 8.83441 31.2911 9.84986C31.2911 9.84986 29.0633 11.373 25.9241 14.1148C22.1772 17.3642 17.2152 22.2384 12.6582 28.5341C12.557 28.7372 12.6582 28.9403 12.8608 28.9403H18.7342C22.5823 28.9403 27.5443 28.2295 32.7089 22.7461C32.8101 22.6445 32.9114 22.6445 33.0127 22.6445C33.1139 22.7461 33.1139 22.8476 33.1139 22.9492C32.3038 24.9801 30.2785 28.9403 26.5316 31.3774H31.4937C34.8354 31.3774 37.2658 29.8542 38.2785 28.2295ZM33.2152 34.9315L37.0633 45.8983H48C45.7722 39.0948 43.3418 32.799 41.0127 27.011C39.1899 30.9712 37.4684 32.9006 33.2152 34.9315ZM0 45.9999L11.038 45.9999L14.7848 34.3222L4.05064 34.3222C2.73418 37.7747 1.41772 41.6334 0 45.9999ZM14.8861 20.9183L20.4557 16.3487C21.6709 13.0993 22.8861 9.84986 24.1013 7.10815C24.7089 8.52978 25.3165 10.053 25.9241 11.5761C28.962 9.0375 30.8861 7.51433 33.4177 6.80352C31.8987 3.45253 30.7848 1.01545 30.2785 2.16607e-06L17.9241 0C16.9114 2.23399 12.962 10.4591 8.3038 21.5275H12.7595C13.6709 21.5275 14.3798 21.426 14.8861 20.9183Z"
      fill="#202020" />
  </svg>],
  ["imall", <svg xmlns="http://www.w3.org/2000/svg" width="89" height="34" viewBox="0 0 89 34" fill="none">
    <path fillRule="evenodd" clipRule="evenodd" d="M1.90749 33.9978H3.74832V9.64716H1.90749V33.9978Z"
          fill="#202020" />
    <path fillRule="evenodd" clipRule="evenodd"
          d="M29.7013 34H27.87V13.7031L28.0989 7.80505L24.0643 28.1113H22.2235L18.1889 7.80505L18.4178 13.7031V34H16.5864V2.49678H18.4178L21.7657 16.9892L23.1487 25.724L24.5221 16.9892L27.87 2.49678H29.7013V34Z"
          fill="#202020" />
    <path fillRule="evenodd" clipRule="evenodd"
          d="M47.7766 17.2593L46.3936 6.6802L45.0201 17.2593L43.6943 26.3967H49.1024L47.7766 17.2593ZM50.1992 33.9986L49.3313 28.1099H43.4176L42.5879 33.9986H40.7089L45.4779 2.44856H47.3188L52.0877 33.9986H50.1992Z"
          fill="#202020" />
    <path fillRule="evenodd" clipRule="evenodd"
          d="M70.4296 34H63.0853V2.49678H64.9262V32.2493H70.4296V34Z" fill="#202020" />
    <path fillRule="evenodd" clipRule="evenodd" d="M89 34H81.6652V2.49678H83.4965V32.2493H89V34Z"
          fill="#202020" />
    <path fillRule="evenodd" clipRule="evenodd"
          d="M5.66561 2.78053C5.66561 1.24516 4.39706 0 2.83281 0C1.26856 0 0 1.24516 0 2.78053C0 4.3159 1.26856 5.56105 2.83281 5.56105C4.39706 5.56105 5.66561 4.3159 5.66561 2.78053Z"
          fill="#202020" />
  </svg>],
["semya", <svg xmlns="http://www.w3.org/2000/svg" width="54" height="62" viewBox="0 0 54 62" fill="none">
            <path
              d="M50.255 54.279C51.6584 56.8019 50.7234 59.9704 48.1689 61.3557C45.6144 62.741 42.4056 61.8187 41.0022 59.2957L40.1066 57.6855C40.1066 57.661 40.1082 57.6363 40.1082 57.6117V36.5343C40.1082 36.3478 40.0987 36.1632 40.0829 35.9809L50.255 54.279ZM31.6579 30.0675L33.4808 26.7888C35.1128 23.8524 34.4836 20.2874 32.1688 18.0546H48.7129C51.6332 18.0546 54 20.3922 54 23.2755C54 26.1589 51.6332 28.4963 48.7129 28.4963H37.7098C37.3251 28.4963 36.9955 28.682 36.8 29.0085C36.6044 29.3351 36.5981 29.7102 36.7826 30.0429L37.5348 31.3971C36.4326 30.5633 35.0544 30.0675 33.5596 30.0675H31.6579Z"
              fill="#202020" />
            <path
              d="M12.9994 59.2957C11.596 61.8187 8.38715 62.741 5.83111 61.3557C3.27665 59.9704 2.34159 56.8019 3.74496 54.279L17.2174 30.0429C17.4034 29.7102 17.3971 29.3351 17.2 29.0085C17.0045 28.682 16.6749 28.4963 16.2902 28.4963H5.28711C2.3684 28.4963 0 26.1589 0 23.2755C0 20.3922 2.3684 18.0546 5.28711 18.0546H27V18.063C27.8609 18.0626 28.7329 18.2696 29.5403 18.7073C32.0963 20.0925 33.0298 23.261 31.6264 25.7838L29.2454 30.0675H26.2021C22.9886 30.0675 19.8948 31.2651 17.5722 33.4636C15.2006 35.7079 13.8934 38.7374 13.8934 41.9863C13.8934 45.1713 15.1549 48.2057 17.4066 50.4784L15.1691 54.5033C14.7717 55.2173 14.5257 55.9737 14.4217 56.7359L12.9994 59.2957Z"
              fill="#202020" />
            <path fillRule="evenodd" clipRule="evenodd"
                  d="M27 0C31.2779 0 34.7454 3.42394 34.7454 7.64776C34.7454 11.8714 31.2779 15.2953 27 15.2953C22.7221 15.2953 19.2546 11.8714 19.2546 7.64776C19.2546 3.42394 22.7221 0 27 0Z"
                  fill="#202020" />
            <path fillRule="evenodd" clipRule="evenodd"
                  d="M37.9936 36.5341C37.9936 34.1162 36.0084 32.1557 33.5596 32.1557H26.2021C23.438 32.1557 20.8961 33.2104 19.0355 34.971C17.1653 36.7408 16.008 39.1914 16.008 41.9861C16.008 45.158 17.5201 48.1164 20.073 50.0213L17.0234 55.508C15.8455 57.6236 16.6292 60.2807 18.7721 61.4423C20.915 62.6041 23.6067 61.8309 24.783 59.715L28.2946 53.5178C28.3939 53.3413 28.5942 53.2566 28.7929 53.3077C28.99 53.3587 29.124 53.5293 29.124 53.7312V57.6115C29.124 60.0295 31.1092 61.9897 33.5596 61.9897C36.0084 61.9897 37.9936 60.0295 37.9936 57.6115V36.5341ZM27 38.8911C28.7944 38.8911 30.2499 40.3273 30.2499 42.0988C30.2499 43.8705 28.7944 45.3065 27 45.3065C25.2056 45.3065 23.7518 43.8705 23.7518 42.0988C23.7518 40.3273 25.2056 38.8911 27 38.8911Z"
                  fill="#202020" />
          </svg>]]);

export const Wrapper = styled.div`
  background-color: ${props => props.bgcolor ? props.bgcolor : "#F5F5F5"};
  border-radius: 5px;
  
  transition: 0.3s;
  ${props => isVertical(props.streetid) ? "display: flex;" : ""}
`;

export const SVGWrapper = styled.div`
  display: flex;
  align-items: center;
  justify-content: center;
  width: ${props => isVertical(props.streetid) ? 100 : 70}px;
  height: ${props => isVertical(props.streetid) ? 70 : 100}px;
`;

const ShoppingMallTile = forwardRef(({ ownerColor, shownRent, type, id }, ref) => {
  const row = getRowByID(id);

  const onClick = () => {
    socket.emit("sell", id)
  }

  return (
    <Wrapper streetid={id} bgcolor={ownerColor} ref={ref} onClick={onClick}>
      {/*<div className="text text-cost-top-bottom">cost</div>*/}

      {(row === "top" || row === "left") ?
        <><Cost streetid={id}>{shownRent}</Cost>
          <SVGWrapper streetid={id}>
            {mallTypes.get(type)}
          </SVGWrapper></> :
        <>
          <SVGWrapper streetid={id}>
            {mallTypes.get(type)}
          </SVGWrapper>
          <Cost streetid={id}>{shownRent}</Cost>
        </>

      }
    </Wrapper>
  );
});

export default ShoppingMallTile;